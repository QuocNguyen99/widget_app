<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- Required only if your app needs to access images or photos
     that other apps created. -->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />

    <!-- Required only if your app needs to access videos
         that other apps created. -->
    <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />

    <!-- Required only if your app needs to access audio files
         that other apps created. -->
    <uses-permission android:name="android.permission.READ_MEDIA_AUDIO" />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>

    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="29" />

    <application
        android:name=".WidgetApplication"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.WidgetApp"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name"
            android:theme="@style/Theme.WidgetApp">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name="com.canhub.cropper.CropImageActivity"
            android:theme="@style/Base.Theme.AppCompat"/>

        <receiver
            android:name=".widget_glance.EventWidgetReceiver"
            android:label="@string/app_name"
            android:exported="false">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/app_widget_info" />
        </receiver>

<!--        <receiver-->
<!--            android:name=".widget_glance.EventWidgetPinnedReceiver"-->
<!--            android:exported="true">-->
<!--            <intent-filter>-->
<!--                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />-->
<!--            </intent-filter>-->
<!--            <meta-data-->
<!--                android:name="android.appwidget.provider"-->
<!--                android:resource="@xml/app_widget_info" />-->
<!--        </receiver>-->

        <!--
            Prompt Google Play services to install the backported photo picker module
            https://developer.android.com/training/data-storage/shared/photopicker#device-availability
        -->
        <!--suppress AndroidDomInspection -->
        <service
            android:name="com.google.android.gms.metadata.ModuleDependencies"
            android:enabled="false"
            android:exported="false"
            tools:ignore="MissingClass">
            <intent-filter>
                <action android:name="com.google.android.gms.metadata.MODULE_DEPENDENCIES" />
            </intent-filter>
            <meta-data
                android:name="photopicker_activity:0:required"
                android:value="" />
        </service>

        <receiver
            android:name=".widget_glance.EventWidgetPinnedReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="EventWidgetPinnedReceiver" />
            </intent-filter>
        </receiver>

        <provider
            android:name="androidx.startup.InitializationProvider"
            android:authorities="${applicationId}.androidx-startup"
            tools:node="remove">
        </provider>

    </application>

</manifest>